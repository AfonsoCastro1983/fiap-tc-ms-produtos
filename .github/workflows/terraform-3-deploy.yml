name: 3- MS-PRODUTO - Deploy app

on:
  push:
    branches:
      - main

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm install
      - name: Run tests and generate coverage
        run: |
          npm test -- --coverage
        env:
          CI: true
      - name: Save test report path
        id: save-report
        run: echo "test_report_path=test-reports/test-report.xml" >> $GITHUB_ENV
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
      - name: Verify coverage
        run: |
          COVERAGE=$(curl -s "https://sonarcloud.io/api/measures/component?component=${{ secrets.SONAR_PROJECT_KEY }}&metricKeys=coverage" \
          | jq -r '.component.measures[0].value')
          if (( $(echo "$COVERAGE < 70" | bc -l) )); then
            echo "Coverage ($COVERAGE%) is below the required 70% threshold."
            exit 1
          fi
          echo "Coverage is sufficient: $COVERAGE%."

  build-and-push:
    needs: sonarcloud
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 992382363343.dkr.ecr.us-east-2.amazonaws.com
      - name: Build Docker image
        run: |
          docker build -t ms-produtos .
      - name: Tag Docker image
        run: |
          docker tag ms-produtos:latest 992382363343.dkr.ecr.us-east-2.amazonaws.com/ms-produtos:latest
      - name: Push Docker image to ECR
        run: |
          docker push 992382363343.dkr.ecr.us-east-2.amazonaws.com/ms-produtos:latest

  update-ecs-service:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Update ECS service
        run: |
          aws ecs update-service \
            --cluster ms_Produtos-ECS-Cluster \
            --service ms_Produtos-service \
            --force-new-deployment